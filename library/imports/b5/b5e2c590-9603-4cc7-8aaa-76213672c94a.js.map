{"version":3,"sources":["assets\\scripts\\player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","type","AudioClip","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestroy","off","start","update","dt","Math","abs","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    jumpHeight: 0,\r\n    jumpDuration: 0,\r\n    maxMoveSpeed: 0,\r\n    accel: 0,\r\n    jumpAudio: {\r\n      default: null,\r\n      type: cc.AudioClip,\r\n    },\r\n  },\r\n\r\n  onKeyDown(event) {\r\n    // set a flag when key pressed\r\n    switch (event.keyCode) {\r\n      case cc.macro.KEY.a:\r\n        this.accLeft = true;\r\n        break;\r\n      case cc.macro.KEY.d:\r\n        this.accRight = true;\r\n        break;\r\n    }\r\n  },\r\n  onKeyUp(event) {\r\n    // set a flag when key released\r\n    switch (event.keyCode) {\r\n      case cc.macro.KEY.a:\r\n        this.accLeft = false;\r\n        break;\r\n      case cc.macro.KEY.d:\r\n        this.accRight = false;\r\n        break;\r\n    }\r\n  },\r\n\r\n  setJumpAction: function () {\r\n    //jump up\r\n    var jumpUp = cc\r\n      .moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight))\r\n      .easing(cc.easeCubicActionOut());\r\n    //jump down\r\n    var jumpDown = cc\r\n      .moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight))\r\n      .easing(cc.easeCubicActionIn());\r\n    var callback = cc.callFunc(this.playJumpSound, this);\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n  },\r\n\r\n  playJumpSound: function () {\r\n    cc.audioEngine.playEffect(this.jumpAudio, false);\r\n  },\r\n\r\n  onLoad: function () {\r\n    // initialize jump action\r\n    this.jumpAction = this.setJumpAction();\r\n    this.node.runAction(this.jumpAction);\r\n\r\n    // accelration direction switch\r\n    this.accLeft = false;\r\n    this.accRight = false;\r\n    // characters current horizontal velocity\r\n    this.xSpeed = 0;\r\n\r\n    // initialize keyboard input listening\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n  },\r\n\r\n  onDestroy() {\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n    cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n  },\r\n\r\n  start() {},\r\n\r\n  update: function (dt) {\r\n    if (this.accLeft) {\r\n      this.xSpeed -= this.accel * dt;\r\n    } else if (this.accRight) {\r\n      this.xSpeed += this.accel * dt;\r\n    }\r\n    if (Math.abs(this.xSpeed) > this.maxMoveSpeed) {\r\n      this.xSpeed = (this.maxMoveSpeed * this.xSpeed) / Math.abs(this.xSpeed);\r\n    }\r\n    this.node.x += this.xSpeed * dt;\r\n  },\r\n});\r\n"]}