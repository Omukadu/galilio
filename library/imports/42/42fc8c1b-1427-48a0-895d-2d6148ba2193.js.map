{"version":3,"sources":["assets\\scripts\\star.js"],"names":["cc","Class","Component","properties","pickRadius","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","opacityRatio","timer","starDuration","minopacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACP,aAASD,EAAE,CAACE,SADL;AAGPC,EAAAA,UAAU,EAAE;AACVC,IAAAA,UAAU,EAAE;AADF,GAHL;AAMPC,EAAAA,iBAAiB,EAAE,6BAAY;AAC7B,QAAIC,SAAS,GAAG,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA,QAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACD,GAVM;AAYPK,EAAAA,QAAQ,EAAE,oBAAY;AACpB,SAAKR,IAAL,CAAUS,YAAV;AACA,SAAKT,IAAL,CAAUU,SAAV;AAEA,SAAKN,IAAL,CAAUO,OAAV;AACD,GAjBM;AAkBP;AAEAC,EAAAA,KApBO,mBAoBC,CAAE,CApBH;AAsBPC,EAAAA,MAAM,EAAE,kBAAY;AAClB,QAAI,KAAKf,iBAAL,KAA2B,KAAKD,UAApC,EAAgD;AAC9C,WAAKW,QAAL;AACA;AACD;;AACD,QAAIM,YAAY,GAAG,IAAI,KAAKd,IAAL,CAAUe,KAAV,GAAkB,KAAKf,IAAL,CAAUgB,YAAnD;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKb,IAAL,CAAUc,OAAV,GACED,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAI,MAAMG,UAAV,CAAvB,CADf;AAED,GA/BM,CAgCP;;AAhCO,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    pickRadius: 0,\r\n  },\r\n  getPlayerDistance: function () {\r\n    var playerPos = this.game.player.getPosition();\r\n    var dist = this.node.position.sub(playerPos).mag();\r\n    return dist;\r\n  },\r\n\r\n  onPicked: function () {\r\n    this.game.spawnNewStar();\r\n    this.game.gainScore();\r\n\r\n    this.node.destroy();\r\n  },\r\n  // onLoad () {},\r\n\r\n  start() {},\r\n\r\n  update: function () {\r\n    if (this.getPlayerDistance() < this.pickRadius) {\r\n      this.onPicked();\r\n      return;\r\n    }\r\n    var opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n    var minopacity = 50;\r\n    this.node.opacity =\r\n      minopacity + Math.floor(opacityRatio * (255 - minopacity));\r\n  },\r\n  // update (dt) {},\r\n});\r\n"]}